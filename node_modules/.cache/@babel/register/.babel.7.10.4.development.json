{
  "{\"sourceRoot\":\"/Users/johnadams/Projects/Bird-Tracker-API/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/johnadams/Projects/Bird-Tracker-API\",\"filename\":\"/Users/johnadams/Projects/Bird-Tracker-API/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/johnadams/Projects/Bird-Tracker-API\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/johnadams/Projects/Bird-Tracker-API/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/johnadams/Projects/Bird-Tracker-API",
      "filename": "/Users/johnadams/Projects/Bird-Tracker-API/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/johnadams/Projects/Bird-Tracker-API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/johnadams/Projects/Bird-Tracker-API/server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/johnadams/Projects/Bird-Tracker-API/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/johnadams/Projects/Bird-Tracker-API/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar app = require('./app');\n\napp.set('port', process.env.PORT || 3000);\napp.listen(app.get('port'), function () {\n  console.log(\"Bird Tracker API is running on http://localhost:\".concat(app.get('port'), \".\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImFwcCIsInNldCIsInByb2Nlc3MiLCJlbnYiLCJQT1JUIiwibGlzdGVuIiwiZ2V0IiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLElBQU1DLEdBQUcsR0FBR0QsT0FBTyxDQUFDLE9BQUQsQ0FBbkI7O0FBRUFDLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLE1BQVIsRUFBZ0JDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFaLElBQW9CLElBQXBDO0FBRUFKLEdBQUcsQ0FBQ0ssTUFBSixDQUFXTCxHQUFHLENBQUNNLEdBQUosQ0FBUSxNQUFSLENBQVgsRUFBNEIsWUFBTTtBQUNoQ0MsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLDJEQUErRFIsR0FBRyxDQUFDTSxHQUFKLENBQVEsTUFBUixDQUEvRDtBQUNELENBRkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL2pvaG5hZGFtcy9Qcm9qZWN0cy9CaXJkLVRyYWNrZXItQVBJLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCBhcHAgPSByZXF1aXJlKCcuL2FwcCcpO1xuXG5hcHAuc2V0KCdwb3J0JywgcHJvY2Vzcy5lbnYuUE9SVCB8fCAzMDAwKTtcblxuYXBwLmxpc3RlbihhcHAuZ2V0KCdwb3J0JyksICgpID0+IHtcbiAgY29uc29sZS5sb2coYEJpcmQgVHJhY2tlciBBUEkgaXMgcnVubmluZyBvbiBodHRwOi8vbG9jYWxob3N0OiR7YXBwLmdldCgncG9ydCcpfS5gKTtcbn0pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "app",
        "set",
        "process",
        "env",
        "PORT",
        "listen",
        "get",
        "console",
        "log"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,OAAD,CAAnB;;AAEAC,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgBC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAApC;AAEAJ,GAAG,CAACK,MAAJ,CAAWL,GAAG,CAACM,GAAJ,CAAQ,MAAR,CAAX,EAA4B,YAAM;AAChCC,EAAAA,OAAO,CAACC,GAAR,2DAA+DR,GAAG,CAACM,GAAJ,CAAQ,MAAR,CAA/D;AACD,CAFD",
      "sourceRoot": "/Users/johnadams/Projects/Bird-Tracker-API/",
      "sourcesContent": [
        "const express = require('express');\nconst app = require('./app');\n\napp.set('port', process.env.PORT || 3000);\n\napp.listen(app.get('port'), () => {\n  console.log(`Bird Tracker API is running on http://localhost:${app.get('port')}.`);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1593634360373
  },
  "{\"sourceRoot\":\"/Users/johnadams/Projects/Bird-Tracker-API/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/johnadams/Projects/Bird-Tracker-API\",\"filename\":\"/Users/johnadams/Projects/Bird-Tracker-API/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/johnadams/Projects/Bird-Tracker-API\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/johnadams/Projects/Bird-Tracker-API/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/johnadams/Projects/Bird-Tracker-API",
      "filename": "/Users/johnadams/Projects/Bird-Tracker-API/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/johnadams/Projects/Bird-Tracker-API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/johnadams/Projects/Bird-Tracker-API/app.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/johnadams/Projects/Bird-Tracker-API/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/johnadams/Projects/Bird-Tracker-API/",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar express = require('express');\n\nvar app = express();\n\nvar cors = require('cors');\n\nvar environment = process.env.NODE_ENV || 'development';\n\nvar configuration = require('./knexfile')[environment];\n\nvar database = require('knex')(configuration);\n\napp.locals.title = 'Bird Tracker';\napp.use(express.json());\napp.use(cors());\napp.get('/', function (request, response) {\n  response.send('Reached Bird Tracker');\n});\napp.get('/api/v1/users/:username/:password', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(request, response) {\n    var _request$params, username, password, user, userToSend;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _request$params = request.params, username = _request$params.username, password = _request$params.password;\n            _context.prev = 1;\n            _context.next = 4;\n            return database('users').where('username', username).select();\n\n          case 4:\n            user = _context.sent;\n\n            if (user.length) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\", response.status(404).json({\n              error: \"username: \".concat(username, \" does not exist. Please try a different username or create an account\")\n            }));\n\n          case 7:\n            if (!(user[0].password !== password)) {\n              _context.next = 9;\n              break;\n            }\n\n            return _context.abrupt(\"return\", response.status(403).json({\n              error: \"The password entered is incorrect. Please try again.\"\n            }));\n\n          case 9:\n            userToSend = [{\n              id: user[0].id,\n              username: user[0].username,\n              city: user[0].city,\n              state: user[0].state\n            }];\n            return _context.abrupt(\"return\", response.status(200).json(userToSend));\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", response.status(500).json({\n              error: _context.t0\n            }));\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 13]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.get('/api/v1/categories/users/:id', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(request, response) {\n    var id, categories;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            id = request.params.id;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return database('categories').where('user_id', id).select();\n\n          case 4:\n            categories = _context2.sent;\n\n            if (categories.length) {\n              _context2.next = 7;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", response.status(404).json({\n              error: \"You do not currently have any categories. Create some!\"\n            }));\n\n          case 7:\n            return _context2.abrupt(\"return\", response.status(200).json(categories));\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](1);\n            return _context2.abrupt(\"return\", response.status(500).json({\n              error: _context2.t0\n            }));\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 10]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\napp.get('/api/v1/sightings/users/:id', /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(request, response) {\n    var id, sightings;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            id = request.params.id;\n            _context3.prev = 1;\n            _context3.next = 4;\n            return database('sightings').where('user_id', id).select();\n\n          case 4:\n            sightings = _context3.sent;\n\n            if (sightings.length) {\n              _context3.next = 7;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", response.status(404).json({\n              error: \"You do not currently have any sightings. Go Birding!\"\n            }));\n\n          case 7:\n            return _context3.abrupt(\"return\", response.status(200).json(sightings));\n\n          case 10:\n            _context3.prev = 10;\n            _context3.t0 = _context3[\"catch\"](1);\n            return _context3.abrupt(\"return\", response.status(500).json({\n              error: _context3.t0\n            }));\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 10]]);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());\napp.get('/api/v1/sightings/categories/:id', /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(request, response) {\n    var id, sightings;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            id = request.params.id;\n            _context4.prev = 1;\n            _context4.next = 4;\n            return database('sightings').where('category_id', id).select();\n\n          case 4:\n            sightings = _context4.sent;\n\n            if (sightings.length) {\n              _context4.next = 7;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", response.status(404).json({\n              error: \"There are currently no sightings for this category. Add some!\"\n            }));\n\n          case 7:\n            return _context4.abrupt(\"return\", response.status(200).json(sightings));\n\n          case 10:\n            _context4.prev = 10;\n            _context4.t0 = _context4[\"catch\"](1);\n            return _context4.abrupt(\"return\", response.status(500).json({\n              error: _context4.t0\n            }));\n\n          case 13:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[1, 10]]);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}());\napp.post('/api/v1/users', /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(request, response) {\n    var user, _i, _arr, requiredParam, userCheck, id;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            user = request.body;\n            _i = 0, _arr = ['username', 'password', 'city', 'state'];\n\n          case 2:\n            if (!(_i < _arr.length)) {\n              _context5.next = 9;\n              break;\n            }\n\n            requiredParam = _arr[_i];\n\n            if (user[requiredParam]) {\n              _context5.next = 6;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", response.status(422).json({\n              error: \"invalid format - required format: { username: <string>, password: <string>, city: <string>, state: <string> }. You are missing a \".concat(requiredParam)\n            }));\n\n          case 6:\n            _i++;\n            _context5.next = 2;\n            break;\n\n          case 9:\n            _context5.prev = 9;\n            _context5.next = 12;\n            return database('users').where('username', user.username).select();\n\n          case 12:\n            userCheck = _context5.sent;\n\n            if (!userCheck.length) {\n              _context5.next = 15;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", response.status(422).json({\n              error: \"An account with the username \".concat(user.username, \" already exists - please choose another\")\n            }));\n\n          case 15:\n            _context5.next = 17;\n            return database('users').insert(user, 'id');\n\n          case 17:\n            id = _context5.sent;\n            return _context5.abrupt(\"return\", response.status(201).json({\n              id: id[0]\n            }));\n\n          case 21:\n            _context5.prev = 21;\n            _context5.t0 = _context5[\"catch\"](9);\n            return _context5.abrupt(\"return\", response.status(500).json({\n              error: _context5.t0\n            }));\n\n          case 24:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[9, 21]]);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}());\napp.post('/api/v1/categories', /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(request, response) {\n    var category, _i2, _arr2, requiredParam, id;\n\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            category = request.body;\n            _i2 = 0, _arr2 = ['name', 'user_id'];\n\n          case 2:\n            if (!(_i2 < _arr2.length)) {\n              _context6.next = 9;\n              break;\n            }\n\n            requiredParam = _arr2[_i2];\n\n            if (category[requiredParam]) {\n              _context6.next = 6;\n              break;\n            }\n\n            return _context6.abrupt(\"return\", response.status(422).json({\n              error: \"invalid format - required format: { name: <string>, user_id: <integer>}. You are missing a \".concat(requiredParam)\n            }));\n\n          case 6:\n            _i2++;\n            _context6.next = 2;\n            break;\n\n          case 9:\n            _context6.prev = 9;\n            _context6.next = 12;\n            return database('categories').insert(category, 'id');\n\n          case 12:\n            id = _context6.sent;\n            return _context6.abrupt(\"return\", response.status(201).json({\n              id: id[0]\n            }));\n\n          case 16:\n            _context6.prev = 16;\n            _context6.t0 = _context6[\"catch\"](9);\n            return _context6.abrupt(\"return\", response.status(500).json({\n              error: _context6.t0\n            }));\n\n          case 19:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[9, 16]]);\n  }));\n\n  return function (_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}());\napp.post('/api/v1/sightings', /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(request, response) {\n    var sighting, _i3, _arr3, requiredParam, id;\n\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            sighting = request.body;\n            _i3 = 0, _arr3 = ['bird_species', 'favorite', 'wishlist', 'user_id'];\n\n          case 2:\n            if (!(_i3 < _arr3.length)) {\n              _context7.next = 9;\n              break;\n            }\n\n            requiredParam = _arr3[_i3];\n\n            if (!(sighting[requiredParam] === undefined)) {\n              _context7.next = 6;\n              break;\n            }\n\n            return _context7.abrupt(\"return\", response.status(422).json({\n              error: \"invalid format - requires species, favorite, wishlist, user_id. You are missing \".concat(requiredParam)\n            }));\n\n          case 6:\n            _i3++;\n            _context7.next = 2;\n            break;\n\n          case 9:\n            _context7.prev = 9;\n            _context7.next = 12;\n            return database('sightings').insert(sighting, 'id');\n\n          case 12:\n            id = _context7.sent;\n            return _context7.abrupt(\"return\", response.status(201).json({\n              id: id[0]\n            }));\n\n          case 16:\n            _context7.prev = 16;\n            _context7.t0 = _context7[\"catch\"](9);\n            return _context7.abrupt(\"return\", response.status(500).json({\n              error: _context7.t0\n            }));\n\n          case 19:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[9, 16]]);\n  }));\n\n  return function (_x13, _x14) {\n    return _ref7.apply(this, arguments);\n  };\n}());\napp.patch('/api/v1/sightings/:sightingId', /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(request, response) {\n    var sightingId, patch, sighting, category, updateSighting;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            sightingId = request.params.sightingId;\n            patch = request.body;\n\n            if (parseInt(sightingId)) {\n              _context8.next = 4;\n              break;\n            }\n\n            return _context8.abrupt(\"return\", response.status(422).json({\n              error: \"Incorrect ID: \".concat(sightingId, \", Required data type: <Number>\")\n            }));\n\n          case 4:\n            _context8.prev = 4;\n            _context8.next = 7;\n            return database('sightings').where('id', sightingId).select();\n\n          case 7:\n            sighting = _context8.sent;\n\n            if (!(sighting.length === 0)) {\n              _context8.next = 10;\n              break;\n            }\n\n            return _context8.abrupt(\"return\", response.status(404).json({\n              error: \"Could not locate sighting: \".concat(sightingId)\n            }));\n\n          case 10:\n            _context8.next = 12;\n            return database('categories').where('id', patch.category_id).select();\n\n          case 12:\n            category = _context8.sent;\n\n            if (!(category.length === 0)) {\n              _context8.next = 15;\n              break;\n            }\n\n            return _context8.abrupt(\"return\", response.status(404).json({\n              error: \"Could not locate category: \".concat(patch.category_id)\n            }));\n\n          case 15:\n            _context8.next = 17;\n            return database('sightings').where('id', sightingId).update(patch, '*');\n\n          case 17:\n            updateSighting = _context8.sent;\n            return _context8.abrupt(\"return\", response.status(200).json(updateSighting));\n\n          case 21:\n            _context8.prev = 21;\n            _context8.t0 = _context8[\"catch\"](4);\n            return _context8.abrupt(\"return\", response.status(500).json({\n              error: _context8.t0\n            }));\n\n          case 24:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[4, 21]]);\n  }));\n\n  return function (_x15, _x16) {\n    return _ref8.apply(this, arguments);\n  };\n}());\napp.patch('/api/v1/users/:userId', /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(request, response) {\n    var userId, patch, user, updatedUser;\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            userId = request.params.userId;\n            patch = request.body;\n\n            if (parseInt(userId)) {\n              _context9.next = 4;\n              break;\n            }\n\n            return _context9.abrupt(\"return\", response.status(422).json({\n              error: \"Incorrect ID: \".concat(userId, \", Required data type: <Number>\")\n            }));\n\n          case 4:\n            _context9.prev = 4;\n            _context9.next = 7;\n            return database('users').where('id', userId).select();\n\n          case 7:\n            user = _context9.sent;\n\n            if (!(user.length === 0)) {\n              _context9.next = 10;\n              break;\n            }\n\n            return _context9.abrupt(\"return\", response.status(404).json({\n              error: \"Could not locate user: \".concat(userId)\n            }));\n\n          case 10:\n            _context9.next = 12;\n            return database('users').where('id', userId).update(patch, '*');\n\n          case 12:\n            updatedUser = _context9.sent;\n            return _context9.abrupt(\"return\", response.status(200).json(updatedUser));\n\n          case 16:\n            _context9.prev = 16;\n            _context9.t0 = _context9[\"catch\"](4);\n            return _context9.abrupt(\"return\", response.status(500).json({\n              error: _context9.t0\n            }));\n\n          case 19:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, null, [[4, 16]]);\n  }));\n\n  return function (_x17, _x18) {\n    return _ref9.apply(this, arguments);\n  };\n}());\napp[\"delete\"]('/api/v1/sightings/:sightingId', /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(request, response) {\n    var sightingId, sighting, deletedSighting;\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            sightingId = request.params.sightingId;\n\n            if (parseInt(sightingId)) {\n              _context10.next = 3;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", response.status(422).json({\n              error: \"Incorrect ID: \".concat(sightingId, \", Required data type: <Number>\")\n            }));\n\n          case 3:\n            _context10.prev = 3;\n            _context10.next = 6;\n            return database('sightings').where('id', sightingId).select();\n\n          case 6:\n            sighting = _context10.sent;\n\n            if (!(sighting.length === 0)) {\n              _context10.next = 9;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", response.status(404).json({\n              error: \"Could not locate sighting: \".concat(sightingId)\n            }));\n\n          case 9:\n            _context10.next = 11;\n            return database('sightings').where('id', sightingId).del();\n\n          case 11:\n            deletedSighting = _context10.sent;\n            return _context10.abrupt(\"return\", response.status(200).json({\n              message: 'Success: sighting has been deleted'\n            }));\n\n          case 15:\n            _context10.prev = 15;\n            _context10.t0 = _context10[\"catch\"](3);\n            return _context10.abrupt(\"return\", response.status(500).json({\n              error: _context10.t0\n            }));\n\n          case 18:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, null, [[3, 15]]);\n  }));\n\n  return function (_x19, _x20) {\n    return _ref10.apply(this, arguments);\n  };\n}());\napp[\"delete\"]('/api/v1/users/:userId', /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(request, response) {\n    var userId, user, deletedUser;\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            userId = request.params.userId;\n\n            if (parseInt(userId)) {\n              _context11.next = 3;\n              break;\n            }\n\n            return _context11.abrupt(\"return\", response.status(422).json({\n              error: \"Incorrect ID: \".concat(userId, \", required data type: <Number>\")\n            }));\n\n          case 3:\n            _context11.prev = 3;\n            _context11.next = 6;\n            return database('users').where('id', userId).select();\n\n          case 6:\n            user = _context11.sent;\n\n            if (!(user.length === 0)) {\n              _context11.next = 9;\n              break;\n            }\n\n            return _context11.abrupt(\"return\", response.status(404).json({\n              error: \"Could not locate user: \".concat(userId)\n            }));\n\n          case 9:\n            _context11.next = 11;\n            return database('users').where('id', userId).del();\n\n          case 11:\n            deletedUser = _context11.sent;\n            return _context11.abrupt(\"return\", response.status(200).json({\n              message: 'Success: user has been deleted'\n            }));\n\n          case 15:\n            _context11.prev = 15;\n            _context11.t0 = _context11[\"catch\"](3);\n            return _context11.abrupt(\"return\", response.status(500).json({\n              error: _context11.t0\n            }));\n\n          case 18:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11, null, [[3, 15]]);\n  }));\n\n  return function (_x21, _x22) {\n    return _ref11.apply(this, arguments);\n  };\n}());\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "express",
        "require",
        "app",
        "cors",
        "environment",
        "process",
        "env",
        "NODE_ENV",
        "configuration",
        "database",
        "locals",
        "title",
        "use",
        "json",
        "get",
        "request",
        "response",
        "send",
        "params",
        "username",
        "password",
        "where",
        "select",
        "user",
        "length",
        "status",
        "error",
        "userToSend",
        "id",
        "city",
        "state",
        "categories",
        "sightings",
        "post",
        "body",
        "requiredParam",
        "userCheck",
        "insert",
        "category",
        "sighting",
        "undefined",
        "patch",
        "sightingId",
        "parseInt",
        "category_id",
        "update",
        "updateSighting",
        "userId",
        "updatedUser",
        "del",
        "deletedSighting",
        "message",
        "deletedUser",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/johnadams/Projects/Bird-Tracker-API/",
      "sourcesContent": [
        "const express = require('express');\nconst app = express();\nconst cors = require('cors');\n\n  const environment = process.env.NODE_ENV || 'development';\n  const configuration = require('./knexfile')[environment];\n  const database = require('knex')(configuration);\n\napp.locals.title = 'Bird Tracker';\napp.use(express.json());\napp.use(cors());\n\napp.get('/', (request, response) => {\n  response.send('Reached Bird Tracker');\n});\n\napp.get('/api/v1/users/:username/:password', async (request, response) => {\n  const { username, password } = request.params;\n\n  try {\n    const user = await database('users').where('username', username).select();\n    if (!user.length) {\n      return response.status(404).json({ error: `username: ${username} does not exist. Please try a different username or create an account` })\n    }\n    if (user[0].password !== password) {\n      return response.status(403).json({ error: `The password entered is incorrect. Please try again.`})\n    }\n    const userToSend = [{ id: user[0].id, username: user[0].username, city: user[0].city, state: user[0].state}]\n    return response.status(200).json(userToSend);\n  } catch(error) {\n    return response.status(500).json({ error });\n  }\n});\n\napp.get('/api/v1/categories/users/:id', async (request, response) => {\n  const { id } = request.params;\n\n  try {\n    const categories = await database('categories').where('user_id', id).select();\n    if (!categories.length) {\n      return response.status(404).json({ error: `You do not currently have any categories. Create some!` })\n    }\n    return response.status(200).json(categories);\n  } catch(error) {\n    return response.status(500).json({ error });\n  }\n});\n\napp.get('/api/v1/sightings/users/:id', async (request, response) => {\n  const { id } = request.params;\n\n  try {\n    const sightings = await database('sightings').where('user_id', id).select();\n\n    if (!sightings.length) {\n      return response.status(404).json({error: `You do not currently have any sightings. Go Birding!`})\n    }\n    return response.status(200).json(sightings);\n  } catch(error) {\n    return response.status(500).json({ error });\n  }\n});\n\napp.get('/api/v1/sightings/categories/:id', async (request, response) => {\n  const { id } = request.params;\n\n  try {\n    const sightings = await database('sightings').where('category_id', id).select();\n    if (!sightings.length) {\n      return response.status(404).json({ error: `There are currently no sightings for this category. Add some!` })\n    }\n    return response.status(200).json(sightings);\n  } catch(error) {\n    return response.status(500).json({ error });\n  }\n})\n\napp.post('/api/v1/users', async (request, response) => {\n  const user = request.body;\n\n  for (let requiredParam of ['username', 'password', 'city', 'state']) {\n    if (!user[requiredParam]) {\n      return response.status(422).json({ error: `invalid format - required format: { username: <string>, password: <string>, city: <string>, state: <string> }. You are missing a ${requiredParam}` })\n    }\n  }\n\n  try {\n    const userCheck = await database('users').where('username', user.username).select();\n    if (userCheck.length) {\n      return response.status(422).json({ error: `An account with the username ${user.username} already exists - please choose another` })\n    }\n    const id = await database('users').insert(user, 'id');\n    return response.status(201).json({ id: id[0] });\n  } catch(error) {\n    return response.status(500).json({ error });\n  }\n});\n\napp.post('/api/v1/categories', async (request, response) => {\n  const category = request.body;\n\n  for (let requiredParam of ['name', 'user_id']) {\n    if (!category[requiredParam]) {\n      return response.status(422).json({ error: `invalid format - required format: { name: <string>, user_id: <integer>}. You are missing a ${requiredParam}` });\n    }\n  }\n\n  try {\n    const id = await database('categories').insert(category, 'id');\n    return response.status(201).json({ id: id[0] });\n  } catch(error) {\n    return response.status(500).json({ error });\n  }\n});\n\napp.post('/api/v1/sightings', async (request, response) => {\n  const sighting = request.body;\n\n  for (let requiredParam of ['bird_species', 'favorite', 'wishlist', 'user_id']){\n    if (sighting[requiredParam] === undefined) {\n      return response.status(422).json({ error: `invalid format - requires species, favorite, wishlist, user_id. You are missing ${requiredParam}`});\n    }\n  }\n\n  try {\n    const id = await database('sightings').insert(sighting, 'id');\n    return response.status(201).json({ id: id[0] });\n  } catch(error) {\n    return response.status(500).json({ error });\n  }\n});\n\napp.patch('/api/v1/sightings/:sightingId', async (request, response) => {\n  const { sightingId } = request.params;\n  const patch = request.body;\n  if(!parseInt(sightingId)) {\n    return response.status(422).json({ error: `Incorrect ID: ${sightingId}, Required data type: <Number>`});\n  }\n\n  try {\n    const sighting = await database('sightings').where('id', sightingId).select();\n    if (sighting.length === 0) {\n      return response.status(404).json({ error: `Could not locate sighting: ${sightingId}` });\n    }\n    const category = await database('categories').where('id', patch.category_id).select();\n    if (category.length === 0) {\n      return response.status(404).json({ error: `Could not locate category: ${patch.category_id}` });\n    }\n    const updateSighting = await database('sightings').where('id', sightingId).update(patch, '*');\n    return response.status(200).json(updateSighting)\n  } catch(error) {\n    return response.status(500).json({ error });\n  }\n});\n\napp.patch('/api/v1/users/:userId', async (request, response) => {\n  const { userId } = request.params;\n  const patch = request.body;\n  if(!parseInt(userId)) {\n    return response.status(422).json({ error: `Incorrect ID: ${userId}, Required data type: <Number>`});\n  }\n\n  try {\n    const user = await database('users').where('id', userId).select();\n    if (user.length === 0) {\n      return response.status(404).json({ error: `Could not locate user: ${userId}` });\n    }\n    const updatedUser = await database('users').where('id', userId).update(patch, '*');\n    return response.status(200).json(updatedUser)\n  } catch(error) {\n    return response.status(500).json({ error });\n  }\n});\n\napp.delete('/api/v1/sightings/:sightingId', async (request, response) => {\n  const { sightingId } = request.params;\n\n  if(!parseInt(sightingId)) {\n    return response.status(422).json({ error: `Incorrect ID: ${sightingId}, Required data type: <Number>`});\n  }\n\n  try {\n    const sighting = await database('sightings').where('id', sightingId).select();\n    if (sighting.length === 0) {\n      return response.status(404).json({ error: `Could not locate sighting: ${sightingId}` })\n    }\n    const deletedSighting = await database('sightings').where('id', sightingId).del();\n    return response.status(200).json({ message: 'Success: sighting has been deleted' });\n  } catch(error) {\n    return response.status(500).json({ error });\n  }\n});\n\napp.delete('/api/v1/users/:userId', async (request, response) => {\n  const { userId } = request.params;\n\n  if (!parseInt(userId)) {\n    return response.status(422).json({ error: `Incorrect ID: ${userId}, required data type: <Number>` })\n  }\n\n  try {\n    const user = await database('users').where('id', userId).select();\n    if (user.length === 0) {\n      return response.status(404).json({ error: `Could not locate user: ${userId}` })\n    }\n\n    const deletedUser = await database('users').where('id', userId).del();\n    return response.status(200).json({ message: 'Success: user has been deleted' });\n  } catch(error) {\n    return response.status(500).json({ error });\n  }\n});\n\n\nmodule.exports = app;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1595881108817
  },
  "{\"sourceRoot\":\"/Users/johnadams/Projects/Bird-Tracker-API/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/johnadams/Projects/Bird-Tracker-API\",\"filename\":\"/Users/johnadams/Projects/Bird-Tracker-API/knexfile.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/johnadams/Projects/Bird-Tracker-API\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/johnadams/Projects/Bird-Tracker-API/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/johnadams/Projects/Bird-Tracker-API",
      "filename": "/Users/johnadams/Projects/Bird-Tracker-API/knexfile.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/johnadams/Projects/Bird-Tracker-API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/johnadams/Projects/Bird-Tracker-API/knexfile.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/johnadams/Projects/Bird-Tracker-API/knexfile.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/johnadams/Projects/Bird-Tracker-API/",
        "sourceFileName": "knexfile.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n// Update with your config settings.\nmodule.exports = {\n  development: {\n    client: 'pg',\n    connection: 'postgres://localhost/birdtrackerdb',\n    migrations: {\n      directory: './db/migrations'\n    },\n    seeds: {\n      directory: './db/seeds/dev'\n    },\n    useNullAsDefault: true\n  },\n  test: {\n    client: 'pg',\n    connection: 'postgres://localhost/birdtrackerdb',\n    migrations: {\n      directory: './db/migrations'\n    },\n    seeds: {\n      directory: './db/seeds/test'\n    },\n    useNullAsDefault: true\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImtuZXhmaWxlLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJkZXZlbG9wbWVudCIsImNsaWVudCIsImNvbm5lY3Rpb24iLCJtaWdyYXRpb25zIiwiZGlyZWN0b3J5Iiwic2VlZHMiLCJ1c2VOdWxsQXNEZWZhdWx0IiwidGVzdCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUVBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFFZkMsRUFBQUEsV0FBVyxFQUFFO0FBQ1hDLElBQUFBLE1BQU0sRUFBRSxJQURHO0FBRVhDLElBQUFBLFVBQVUsRUFBRSxvQ0FGRDtBQUdYQyxJQUFBQSxVQUFVLEVBQUU7QUFDVkMsTUFBQUEsU0FBUyxFQUFFO0FBREQsS0FIRDtBQU1YQyxJQUFBQSxLQUFLLEVBQUU7QUFDTEQsTUFBQUEsU0FBUyxFQUFFO0FBRE4sS0FOSTtBQVNYRSxJQUFBQSxnQkFBZ0IsRUFBRTtBQVRQLEdBRkU7QUFjZkMsRUFBQUEsSUFBSSxFQUFFO0FBQ0pOLElBQUFBLE1BQU0sRUFBRSxJQURKO0FBRUpDLElBQUFBLFVBQVUsRUFBRSxvQ0FGUjtBQUdKQyxJQUFBQSxVQUFVLEVBQUU7QUFDVkMsTUFBQUEsU0FBUyxFQUFFO0FBREQsS0FIUjtBQU1KQyxJQUFBQSxLQUFLLEVBQUU7QUFDTEQsTUFBQUEsU0FBUyxFQUFFO0FBRE4sS0FOSDtBQVNKRSxJQUFBQSxnQkFBZ0IsRUFBRTtBQVRkO0FBZFMsQ0FBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2pvaG5hZGFtcy9Qcm9qZWN0cy9CaXJkLVRyYWNrZXItQVBJLyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFVwZGF0ZSB3aXRoIHlvdXIgY29uZmlnIHNldHRpbmdzLlxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcblxuICBkZXZlbG9wbWVudDoge1xuICAgIGNsaWVudDogJ3BnJyxcbiAgICBjb25uZWN0aW9uOiAncG9zdGdyZXM6Ly9sb2NhbGhvc3QvYmlyZHRyYWNrZXJkYicsXG4gICAgbWlncmF0aW9uczoge1xuICAgICAgZGlyZWN0b3J5OiAnLi9kYi9taWdyYXRpb25zJ1xuICAgIH0sXG4gICAgc2VlZHM6IHtcbiAgICAgIGRpcmVjdG9yeTogJy4vZGIvc2VlZHMvZGV2J1xuICAgIH0sXG4gICAgdXNlTnVsbEFzRGVmYXVsdDogdHJ1ZVxuICB9LFxuXG4gIHRlc3Q6IHtcbiAgICBjbGllbnQ6ICdwZycsXG4gICAgY29ubmVjdGlvbjogJ3Bvc3RncmVzOi8vbG9jYWxob3N0L2JpcmR0cmFja2VyZGInLFxuICAgIG1pZ3JhdGlvbnM6IHtcbiAgICAgIGRpcmVjdG9yeTogJy4vZGIvbWlncmF0aW9ucydcbiAgICB9LFxuICAgIHNlZWRzOiB7XG4gICAgICBkaXJlY3Rvcnk6ICcuL2RiL3NlZWRzL3Rlc3QnXG4gICAgfSxcbiAgICB1c2VOdWxsQXNEZWZhdWx0OiB0cnVlLFxuICB9XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "knexfile.js"
      ],
      "names": [
        "module",
        "exports",
        "development",
        "client",
        "connection",
        "migrations",
        "directory",
        "seeds",
        "useNullAsDefault",
        "test"
      ],
      "mappings": ";;AAAA;AAEAA,MAAM,CAACC,OAAP,GAAiB;AAEfC,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAE,IADG;AAEXC,IAAAA,UAAU,EAAE,oCAFD;AAGXC,IAAAA,UAAU,EAAE;AACVC,MAAAA,SAAS,EAAE;AADD,KAHD;AAMXC,IAAAA,KAAK,EAAE;AACLD,MAAAA,SAAS,EAAE;AADN,KANI;AASXE,IAAAA,gBAAgB,EAAE;AATP,GAFE;AAcfC,EAAAA,IAAI,EAAE;AACJN,IAAAA,MAAM,EAAE,IADJ;AAEJC,IAAAA,UAAU,EAAE,oCAFR;AAGJC,IAAAA,UAAU,EAAE;AACVC,MAAAA,SAAS,EAAE;AADD,KAHR;AAMJC,IAAAA,KAAK,EAAE;AACLD,MAAAA,SAAS,EAAE;AADN,KANH;AASJE,IAAAA,gBAAgB,EAAE;AATd;AAdS,CAAjB",
      "sourceRoot": "/Users/johnadams/Projects/Bird-Tracker-API/",
      "sourcesContent": [
        "// Update with your config settings.\n\nmodule.exports = {\n\n  development: {\n    client: 'pg',\n    connection: 'postgres://localhost/birdtrackerdb',\n    migrations: {\n      directory: './db/migrations'\n    },\n    seeds: {\n      directory: './db/seeds/dev'\n    },\n    useNullAsDefault: true\n  },\n\n  test: {\n    client: 'pg',\n    connection: 'postgres://localhost/birdtrackerdb',\n    migrations: {\n      directory: './db/migrations'\n    },\n    seeds: {\n      directory: './db/seeds/test'\n    },\n    useNullAsDefault: true,\n  }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1593658695087
  }
}